<% content_for :body_class do %> onboarding-page <% end %>

<div class="modals-container" style="display: contents">
  <div class="modal gr-auth showing squished" style="display: contents">
    <main class="login-form">
      <header class="header">
        <a class="wordmark logo-full" href="https://www.gumroad.jacquesdesmarais.dev"></a>
        <div class="actions">
          <a href="/signup">Sign up</a>
        </div>
        <h1>Log in</h1>
      </header>
      <div class="input-group">
        <section style="display: grid; grid-gap: var(--spacer-6); padding-bottom: var(--spacer-7)">
          <div class="error-indicator danger" role="alert" style="display: none"></div>
          <div style="display: grid; gap: var(--spacer-3); grid-template-rows: 1fr">
            <form class="button_to" method="get" action="#">
              <button class="button button-facebook not-implemented" style="width: 100%" type="submit">Facebook</button>
            </form>
            <form class="button_to" method="get" action="#">
              <button class="button button-google not-implemented" style="width: 100%" type="submit">Google</button>
            </form>
            <form class="button_to" method="get" action="#">
              <button class="button button-twitter not-implemented" style="width: 100%" type="submit">X</button>
            </form>
            <form class="button_to" method="get" action="#">
              <button class="button button-stripe not-implemented" style="width: 100%" type="submit">Stripe</button>
            </form>
          </div>
        </section>
        <%= form_with url: "/login.json", id: "login-form", autocomplete: "off" do |form| %>
        <section class="js-classic-auth">
          <div class="divider" role="separator">
            <span>or</span>
          </div>
          <fieldset>
            <legend>
              <label> Email </label>
            </legend>
            <input class="required" tabindex="1" type="email" name="user[login_identifier]" id="user_email" />
          </fieldset>
          <fieldset>
            <legend>
              <label> Password </label>
              <a class="js-show-forgot-password-form-trigger not-implemented" href="#">Forgot your password?</a>
            </legend>
            <input class="password required" tabindex="2" type="password" name="user[password]" id="user_password" />
          </fieldset>
          <button class="primary js-login-button" id="submit_button">Login</button>
          <div class="js-recaptcha" data-sitekey="6LcSj_____________________________z85cLO" id="signupRecaptcha"></div>
        </section>
        <% end %>
      </div>
    </main>
  </div>
  <aside class="avatars-container"><%= image_tag "auth/background.png" %></aside>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    var form = document.getElementById('login-form');
    var submitButton = document.getElementById('submit_button');

    submitButton.addEventListener('click', function (event) {
      event.preventDefault(); // Prevent form submission
      if (validateForm()) {
        submitForm();
      }
    });

    function validateForm() {
      var emailField = document.getElementById('user_email');
      var passwordField = document.getElementById('user_password');

      if (!emailField.value.trim()) {
        emailField.classList.add('error');
        emailField.parentElement.classList.add('danger');
        emailField.focus();
        return false;
      }

      if (!passwordField.value.trim()) {
        passwordField.classList.add('error');
        passwordField.parentElement.classList.add('danger');
        passwordField.focus();
        return false;
      }

      return true; // Form is valid
    }

    function submitForm() {
      // Get form data
      var formData = new FormData(form);

      // Convert form data to URL encoded string
      var urlEncodedFormData = new URLSearchParams(formData).toString();

      // Create new XMLHttpRequest object
      var xhr = new XMLHttpRequest();

      // Configure request
      xhr.open('POST', '/login.json', true);
      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');

      // Handle response
      xhr.onload = function () {
        if (xhr.status >= 200 && xhr.status < 300) {
          window.location.href = '/';
        } else {
          const el = document.querySelector('.error-indicator');
          el.innerHTML = 'Incorrect username or password.';
          el.style.display = '';
        }
      };

      // Handle error
      xhr.onerror = function () {
        const el = document.querySelector('.error-indicator');
        el.innerHTML = 'Something went wrong. Please try again later.';
        el.style.display = '';
      };

      // Send request with URL encoded form data
      xhr.send(urlEncodedFormData);
    }
  });
</script>
