# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

# Finding and customizing actions:
# https://docs.github.com/en/actions/learn-github-actions/finding-and-customizing-actions

name: Deploy to Amazon ECS

on:
  push:
    branches:
      - automate-smoke-test

env:
  AWS_REGION: us-east-1                                 # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: gumroad/app                           # set this to your Amazon ECR repository name
  ECS_SERVICE: gumroad-staging-app-Service-BIz1a0vbXVft # set this to your Amazon ECS service name
  ECS_CLUSTER: gumroad-staging-Cluster-OnUjaD06brDx     # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: .aws/task-definition.json        # set this to the path to your Amazon ECS task definition
                                                        # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: app                                   # set this to the name of the container in the
                                                        # containerDefinitions section of your task definition

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Configure AWS Credentials" # Action for GitHub Actions
        uses: aws-actions/configure-aws-credentials@v4.0.2 # https://github.com/marketplace/actions/configure-aws-credentials-action-for-github-actions
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build Docker Image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -f copilot/app/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./server

      - name: Test
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker run $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG rails test

  # smoke-test:
  #   name: Smoke Test Staging
  #   runs-on: ubuntu-latest
  #   environment: test
  #   container: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  #   steps:
  #     - name: X
  #       run: rails test:system

  #   services:
  #     selenium-standalone:
  #       image: selenium/standalone-chrome:4.18.1-20240224
  #       ports:
  #         - 4444:4444
