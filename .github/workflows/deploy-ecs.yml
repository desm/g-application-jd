# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

# Finding and customizing actions:
# https://docs.github.com/en/actions/learn-github-actions/finding-and-customizing-actions

name: Deploy to Amazon ECS

on:
  push:
    branches:
      - automate-smoke-test

env:
  AWS_REGION: us-east-1                                 # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: gumroad/app                           # set this to your Amazon ECR repository name
  ECS_SERVICE: gumroad-staging-app-Service-BIz1a0vbXVft # set this to your Amazon ECS service name
  ECS_CLUSTER: gumroad-staging-Cluster-OnUjaD06brDx     # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: .aws/task-definition.json        # set this to the path to your Amazon ECS task definition
                                                        # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: app                                   # set this to the name of the container in the
                                                        # containerDefinitions section of your task definition

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

  smoke-test:
    name: Smoke test staging env
    needs: deploy
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run smoke test
        env:
          IMAGE: smoke-test-runner:${{ github.sha }}
        run: |
          docker build -f github-workflows/Dockerfile -t $IMAGE ./smoke-test-runner
          NETWORK=$(docker network ls --format '{{ .Name }}' --filter name=github_network)
          echo "NETWORK is: $NETWORK"
          docker run --rm --volume ./smoke-test-runner:/app --workdir /app --user runner --network $(docker network ls --format '{{ .Name }}' --filter name=github_network) $IMAGE ./bin/rails test:system

    services:
      selenium-standalone:
        image: selenium/standalone-chrome:4.18.1-20240224
        options: --shm-size=2gb
        ports:
          - 4444:4444
